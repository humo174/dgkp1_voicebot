import subprocess
import sys
import zipfile
import time
import datetime
from creds import oauth_token, catalog_id, bot_api, allow_users, admin_id


def install(package):
    subprocess.check_call([sys.executable, "-m", "pip", "install", package])


checkImports = False
while not checkImports:
    try:
        import telebot
        import openpyxl
        from telebot import types
        from speechkit import Session, SpeechSynthesis
        import pandas as pd
        import xlsxwriter

        checkImports = True
    except ImportError:
        install('pytelegrambotapi')
        install('speechkit')
        install('openpyxl')
        install('pandas')
        install('xlsxwriter')

bot = telebot.TeleBot(bot_api)


def convert_file(chatid):
    @bot.message_handler(content_types=['document'])
    def lets_convert(message):
        if message.text != '–û—Ç–º–µ–Ω–∞' and message.text is not None:
            kbc = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
            kbc1 = types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')
            kbc.add(kbc1)
            msg = bot.send_message(message.chat.id, f'–Ø –∂–¥—É —Ñ–∞–π–ª, –ª–∏–±–æ –∂–º–∏ "–û—Ç–º–µ–Ω–∞"', reply_markup=kbc)
            bot.register_next_step_handler(msg, lets_convert)
        elif message.text == '–û—Ç–º–µ–Ω–∞':
            kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
            kb1 = types.KeyboardButton(text='üì¢ –û–∑–≤—É—á–∏—Ç—å')
            kb2 = types.KeyboardButton(text='üìÑ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª')
            kb.add(kb1, kb2)
            bot.send_message(message.chat.id, f'–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=kb)
        else:
            file_name = f'{message.chat.id}.xlsx'
            file_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            with open(file_name, 'wb') as new_file:
                new_file.write(downloaded_file)
            bot.send_message(message.chat.id, f'–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª')

            try:
                wb = openpyxl.load_workbook(f'{message.chat.id}.xlsx')
                sheet = wb.active
                rows = sheet.max_row

                wb_convert = openpyxl.Workbook()
                wb_convert.create_sheet(title='–õ–∏—Å—Ç1', index=0)
                del wb_convert['Sheet']
                sheet_convert = wb_convert['–õ–∏—Å—Ç1']
                sheet_convert['A1'] = '–ù–æ–º–µ—Ä'
                sheet_convert['B1'] = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'

                wb_decline = openpyxl.Workbook()
                wb_decline.create_sheet(title='–õ–∏—Å—Ç1', index=0)
                del wb_decline['Sheet']
                sheet_decline = wb_decline['–õ–∏—Å—Ç1']
                sheet_decline['A1'] = 'fio'

                for i in range(1, rows + 1):
                    fio = sheet.cell(row=i, column=2)
                    phone = sheet.cell(row=i, column=8)
                    if fio.value is not None and fio.value != '–§–ò–û –ø–∞—Ü–∏–µ–Ω—Ç–∞' and phone.value is not None:
                        a = (
                            f'{((((phone.value.split(",")[0]).replace("(", "")).replace(")", "")).replace("-", "")).replace(" ", "")[2::]}',
                            f'{fio.value}')
                        sheet_convert.append(a)
                    if fio.value is not None and fio.value != '–§–ò–û –ø–∞—Ü–∏–µ–Ω—Ç–∞' and phone.value is None:
                        b = (f'{fio.value}',)
                        sheet_decline.append(b)

                wb_decline.save(f'{message.chat.id}-declined.xlsx')
                wb_convert.save(f'{message.chat.id}-converted.xlsx')

                df = pd.read_excel(f'{message.chat.id}-converted.xlsx', sheet_name='–õ–∏—Å—Ç1')
                workbook = xlsxwriter.Workbook(f'{message.chat.id}-converted.xlsx')
                worksheet = workbook.add_worksheet('–õ–∏—Å—Ç1')
                worksheet.write('A1', '–ù–æ–º–µ—Ä')
                worksheet.write('B1', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π')
                for i in range(len(df)):
                    worksheet.write('A' + str(i + 2), str(df['–ù–æ–º–µ—Ä'][i]))
                    worksheet.write('B' + str(i + 2), str(df['–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'][i]))

                workbook.close()
                time.sleep(4)
                kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                kb1 = types.KeyboardButton(text='üì¢ –û–∑–≤—É—á–∏—Ç—å')
                kb2 = types.KeyboardButton(text='üìÑ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª')
                kb.add(kb1, kb2)
                with open(f'{message.chat.id}-converted.xlsx', 'rb') as converted_file:
                    bot.send_document(message.chat.id,
                                      caption='–ì–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –∞–≤—Ç–æ–æ–±–∑–≤–æ–Ω–∞\n'
                                              '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫—Ä—ã—Ç—å –∏ –ø—Ä–æ—Å—Ç–æ <b>–°–û–•–†–ê–ù–ò–¢–¨</b> —Ñ–∞–π–ª –µ—â–µ —Ä–∞–∑, '
                                              '—á—Ç–æ–±—ã –æ–Ω –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –≤ –í–ê–¢–° "–†–æ—Å—Ç–µ–ª–µ–∫–æ–º"',
                                      document=converted_file, parse_mode='html',
                                      visible_file_name=f'–ê–≤—Ç–æ–æ–±–∑–≤–æ–Ω {datetime.datetime.now().strftime("%d-%m-%Y")}'
                                                        f'.xlsx')

                with open(f'{message.chat.id}-declined.xlsx', 'rb') as declined_file:
                    bot.send_document(message.chat.id, caption="–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã –±–µ–∑ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                                      document=declined_file,
                                      visible_file_name=f'–û—Ç–∫–ª–æ–Ω–µ–Ω–æ {datetime.datetime.now().strftime("%d-%m-%Y")}'
                                                        f'.xlsx', reply_markup=kb)
            except zipfile.BadZipfile:
                time.sleep(2)
                conv_file = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                conv_file_1 = types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')
                conv_file.add(conv_file_1)
                msg = bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞\n–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ '
                                                        f'—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç '
                                                        f'—Å–∫–µ–ª–µ—Ç—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –ø–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ '
                                                        f'"–ö–Ω–∏–≥–∞ Excel (*.xlsx)"\n\n–û–∂–∏–¥–∞—é –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–∞–π–ª',
                                       reply_markup=conv_file)
                bot.register_next_step_handler(msg, lets_convert)

    conv_file = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    conv_file_1 = types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')
    conv_file.add(conv_file_1)
    msg = bot.send_message(chatid, f'1. –°—Ñ–æ—Ä–º–∏—Ä—É–π —Ñ–∞–π–ª –≤ –†–ú–ò–° "–ë–ê–†–°" –≤ –º–µ–Ω—é: –û—Ç—á–µ—Ç—ã ‚Üí –†–µ–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞ ‚Üí –ì—Ä–∞—Ñ–∏–∫ –∑–∞–ø–∏—Å–µ–π\n'
                                   f'2. –ü–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω–∏ —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç .xlsx '
                                   f'(–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª ‚Üí –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫...)\n'
                                   f'3. –ü—Ä–∏—à–ª–∏ –º–Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª', reply_markup=conv_file)
    bot.register_next_step_handler(msg, lets_convert)


def lets_rock():
    @bot.message_handler(content_types=['text'])
    def message_main(message):
        def ozvuch(message):
            if message.text == '–û—Ç–º–µ–Ω–∞':
                kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                kb1 = types.KeyboardButton(text='üì¢ –û–∑–≤—É—á–∏—Ç—å')
                kb2 = types.KeyboardButton(text='üìÑ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª')
                kb.add(kb1, kb2)
                bot.send_message(message.chat.id, f'–ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω', reply_markup=kb)

            else:
                text_to_sound = message.text
                kbcl = types.ReplyKeyboardRemove()
                try:
                    bot.send_message(message.chat.id, f'–î–æ–∂–¥–∏—Ç–µ—Å—å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞', reply_markup=kbcl)
                    session = Session.from_yandex_passport_oauth_token(oauth_token, catalog_id)
                    synthesizeaudio = SpeechSynthesis(session)
                    synthesizeaudio.synthesize(
                        str(f'{message.chat.id}-out.wav'), text=f'{text_to_sound}',
                        voice='oksana', sampleRateHertz='16000'
                    )
                    kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                    kb1 = types.KeyboardButton(text='üì¢ –û–∑–≤—É—á–∏—Ç—å')
                    kb2 = types.KeyboardButton(text='üìÑ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª')
                    kb.add(kb1, kb2)
                    audio = open(f'{message.chat.id}-out.wav', 'rb')
                    time.sleep(4)
                    bot.send_message(message.chat.id, f'–ê—É–¥–∏–æ—Ñ–∞–π–ª —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ', reply_markup=kb)
                    bot.send_audio(message.chat.id, audio)
                    audio.close()
                except Exception as audiofail:
                    error_audio = open(r'error_audio.log', 'a+')
                    error_audio.write(f'{datetime.datetime.now()} | AudioFail: {audiofail}\n\n\n')
                    error_audio.close()
                    bot.send_message(message.chat.id, f'–°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞. –ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ª–æ–≥. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ '
                                                      f'—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É')

        if message.text == 'üì¢ –û–∑–≤—É—á–∏—Ç—å' and message.chat.id in allow_users:
            kbc = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
            kbc1 = types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')
            kbc.add(kbc1)
            msg = bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏', reply_markup=kbc)
            bot.register_next_step_handler(msg, ozvuch)

        if message.text == 'üìÑ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª':
            convert_file(message.chat.id)


def mainbody():
    @bot.message_handler(commands=['start'])
    def start_command(message):
        if message.chat.id in allow_users:
            kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
            kb1 = types.KeyboardButton(text='üì¢ –û–∑–≤—É—á–∏—Ç—å')
            kb2 = types.KeyboardButton(text='üìÑ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª')
            kb.add(kb1, kb2)
            bot.send_message(message.chat.id, f'–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç—É!', reply_markup=kb)
            lets_rock()
        else:
            bot.send_message(message.chat.id, f'–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º, '
                                              f'–ø–µ—Ä–µ—à–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n\n'
                                              f'<code>{message.chat.id}</code>',
                             parse_mode='html')

    bot.polling(non_stop=True)


bot.send_message(admin_id, f'–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω')
while 1 == 1:
    try:
        mainbody()
    except Exception as exc:
        f = open(r'error_connection.log', 'a+')
        f.write(f'{datetime.datetime.now()} | ErrorConnection: {exc}\n')
        f.close()
